{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/gwehmeier/Dev/gregory-and-cecelia/components/active-link/index.js\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nimport Link from 'next/link';\nimport React, { Children } from 'react';\nimport PropTypes from 'prop-types';\n\nvar ActiveLink = function ActiveLink(_ref) {\n  var router = _ref.router,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"router\", \"children\"]);\n\n  var child = Children.only(children);\n  var className = child.props.className || '';\n\n  if (router.pathname === props.href && props.activeClassName) {\n    className = \"\".concat(className, \" \").concat(props.activeClassName).trim();\n  }\n\n  delete props.activeClassName;\n  return __jsx(Link, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.cloneElement(child, {\n    className: className\n  }));\n};\n\nActiveLink.propTypes = {\n  router: PropTypes.any,\n  children: PropTypes.any,\n  href: PropTypes.string,\n  activeClassName: PropTypes.string\n};\nexport default withRouter(ActiveLink);","map":{"version":3,"sources":["/Users/gwehmeier/Dev/gregory-and-cecelia/components/active-link/index.js"],"names":["withRouter","Link","React","Children","PropTypes","ActiveLink","router","children","props","child","only","className","pathname","href","activeClassName","trim","cloneElement","propTypes","any","string"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAoC;AAAA,MAAjCC,MAAiC,QAAjCA,MAAiC;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AACrD,MAAMC,KAAK,GAAGN,QAAQ,CAACO,IAAT,CAAcH,QAAd,CAAd;AAEA,MAAII,SAAS,GAAGF,KAAK,CAACD,KAAN,CAAYG,SAAZ,IAAyB,EAAzC;;AACA,MAAIL,MAAM,CAACM,QAAP,KAAoBJ,KAAK,CAACK,IAA1B,IAAkCL,KAAK,CAACM,eAA5C,EAA6D;AAC3DH,IAAAA,SAAS,GAAG,UAAGA,SAAH,cAAgBH,KAAK,CAACM,eAAtB,EAAwCC,IAAxC,EAAZ;AACD;;AAED,SAAOP,KAAK,CAACM,eAAb;AAEA,SAAO,MAAC,IAAD,eAAUN,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkBN,KAAK,CAACc,YAAN,CAAmBP,KAAnB,EAA0B;AAAEE,IAAAA,SAAS,EAATA;AAAF,GAA1B,CAAlB,CAAP;AACD,CAXD;;AAaAN,UAAU,CAACY,SAAX,GAAuB;AACrBX,EAAAA,MAAM,EAAEF,SAAS,CAACc,GADG;AAErBX,EAAAA,QAAQ,EAAEH,SAAS,CAACc,GAFC;AAGrBL,EAAAA,IAAI,EAAET,SAAS,CAACe,MAHK;AAIrBL,EAAAA,eAAe,EAAEV,SAAS,CAACe;AAJN,CAAvB;AAQA,eAAenB,UAAU,CAACK,UAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router';\nimport Link from 'next/link';\nimport React, { Children } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ActiveLink = ({ router, children, ...props }) => {\n  const child = Children.only(children);\n\n  let className = child.props.className || '';\n  if (router.pathname === props.href && props.activeClassName) {\n    className = `${className} ${props.activeClassName}`.trim();\n  }\n\n  delete props.activeClassName;\n\n  return <Link {...props}>{React.cloneElement(child, { className })}</Link>;\n};\n\nActiveLink.propTypes = {\n  router: PropTypes.any,\n  children: PropTypes.any,\n  href: PropTypes.string,\n  activeClassName: PropTypes.string,\n  \n}\n\nexport default withRouter(ActiveLink);\n\n"]},"metadata":{},"sourceType":"module"}